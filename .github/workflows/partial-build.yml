on:
  workflow_call:
    inputs:
      release-artifact-upload-url:
        required: false
        type: string
        description: The URL for release artifact uploads; if unset the release uploads are skipped.

defaults:
  run:
    shell: bash

jobs:
  plan:
    name: Plan the execution
    runs-on: ubuntu-24.04
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    permissions:
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Compute matrix
        uses: ./.github/actions/plan
        id: set-matrix
        with:
          plan-name: build

  build:
    needs:
      - plan
    strategy:
      matrix: ${{ fromJson(needs.plan.outputs.matrix) }}
      fail-fast: false
    name: |-
      ${{ matrix.plan.mode.platformIndependent == true && matrix.plan.mode.name || format('{0} :: {1}', matrix.plan.platform.name, matrix.plan.mode.name) }}
    runs-on: ${{ matrix.plan.platform.os }}
    env: ${{ matrix.plan.platform.env }}
    timeout-minutes: 120
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        timeout-minutes: 5

      - uses: ./.github/actions/common-setup
        with:
          platformCacheKey: ${{ matrix.plan.platform.cacheKey }}
          modeCacheKey: ${{ matrix.plan.mode.cargoCacheKey }}
          buildEnvScript: ${{ matrix.plan.platform.buildEnvScript }}
        timeout-minutes: 10

      - name: Run cargo ${{ matrix.plan.mode.cargoCommand }}
        run: cargo ${{ matrix.plan.mode.cargoCommand }} ${{ matrix.plan.mode.cargoArgs }}

      - name: Archive the binaries for release
        env:
          TARGET_DIR: ${{ matrix.plan.platform.buildTargetDir && format('{0}/release', matrix.plan.platform.buildTargetDir) || 'release' }}
        run: |
          ./build-utils/archive-binaries \
            target/build-archives \
            "target/$TARGET_DIR" \
            ""

      - name: Compute artifact name
        env:
          ARTIFACT_NAME: |
            build-${{ runner.os }}${{ matrix.plan.platform.artifactMarker && format('-{0}', matrix.plan.platform.artifactMarker) || '' }}
        run: |
          printf "ARTIFACT_NAME=%s\n" "$ARTIFACT_NAME" >>"$GITHUB_ENV"

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.ARTIFACT_NAME }}
          path: target/build-archives/archives/*.tar.gz

      - name: Upload release archive
        uses: shogo82148/actions-upload-release-asset@v1
        if: inputs.release-artifact-upload-url != ''
        with:
          upload_url: ${{ inputs.release-artifact-upload-url }}
          asset_path: target/build-archives/archives/*.tar.gz
          asset_name: ${{ env.ARTIFACT_NAME }}
